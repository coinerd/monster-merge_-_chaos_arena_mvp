@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --primary: #6d28d9;
  --secondary: #4c1d95;
  --accent: #f59e0b;
  --background: #1f2937;
  --text: #f3f4f6;
}

body {
  font-family: 'Poppins', sans-serif;
  background-color: var(--background);
  color: var(--text);
  margin: 0;
  padding: 0;
  overflow-x: hidden;
}

h1, h2, h3, h4 {
  font-family: 'Bangers', cursive;
  letter-spacing: 1px;
}

.game-title {
  font-size: 3rem;
  color: var(--accent);
  text-shadow: 3px 3px 0px rgba(0, 0, 0, 0.5);
}

.game-container {
  width: 100%;
  height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.monster-grid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 10px;
  margin: 20px 0;
  position: relative;
  border: 2px solid rgba(255, 255, 255, 0.1);
  border-radius: 10px;
  padding: 10px;
  background-color: rgba(0, 0, 0, 0.2);
}

.grid-cell {
  width: 100px;
  height: 100px;
  background-color: rgba(255, 255, 255, 0.1);
  border-radius: 8px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all 0.2s ease;
  position: relative;
}

.grid-cell:hover {
  background-color: rgba(255, 255, 255, 0.2);
}

.monster-container {
  position: relative;
  width: 80px;
  height: 80px;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1;
  /* Fix for the "not allowed" cursor during drag */
  cursor: grab !important;
}

.monster-container:active {
  cursor: grabbing !important;
}

/* Override the default "not-allowed" cursor during drag */
.monster-container * {
  pointer-events: none;
}

.monster {
  width: 80px;
  height: 80px;
  border-radius: 8px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: bold;
  color: white;
  user-select: none;
  transition: transform 0.2s ease;
}

.monster:hover {
  transform: scale(1.05);
}

.monster-fire {
  background: linear-gradient(135deg, #f97316, #dc2626);
}

.monster-water {
  background: linear-gradient(135deg, #0ea5e9, #1d4ed8);
}

.monster-earth {
  background: linear-gradient(135deg, #65a30d, #166534);
}

.monster-air {
  background: linear-gradient(135deg, #a3a3a3, #d4d4d4);
}

.battle-arena {
  width: 100%;
  max-width: 800px;
  height: 500px;
  background-color: rgba(0, 0, 0, 0.3);
  border-radius: 12px;
  position: relative;
  overflow: hidden;
  margin: 20px 0;
  display: flex;
  flex-direction: column;
}

.battle-view {
  position: relative;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.5);
  perspective: 1000px;
  flex-grow: 1;
  min-height: 250px;
}

.battle-background {
  background-image: radial-gradient(circle at center, rgba(76, 29, 149, 0.3) 0%, rgba(17, 24, 39, 0.8) 70%);
  background-size: 100% 100%;
  position: absolute;
  inset: 0;
  z-index: 0;
}

.battle-background::before {
  content: '';
  position: absolute;
  inset: 0;
  background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="100" height="100" viewBox="0 0 100 100"><circle cx="50" cy="50" r="1" fill="rgba(255,255,255,0.2)"/></svg>');
  background-size: 100px 100px;
  opacity: 0.5;
  z-index: -1;
}

.health-bar {
  height: 4px;
  background-color: #ef4444;
  border-radius: 10px;
  position: relative;
  overflow: hidden;
}

.health-bar-fill {
  height: 100%;
  background-color: #22c55e;
  transition: width 0.3s ease;
}

.btn {
  padding: 10px 20px;
  border-radius: 8px;
  font-weight: bold;
  cursor: pointer;
  transition: all 0.2s ease;
  text-transform: uppercase;
  letter-spacing: 1px;
  border: none;
  outline: none;
}

.btn-primary {
  background-color: var(--primary);
  color: white;
}

.btn-primary:hover {
  background-color: var(--secondary);
  transform: translateY(-2px);
}

.btn-accent {
  background-color: var(--accent);
  color: white;
}

.btn-accent:hover {
  background-color: #d97706;
  transform: translateY(-2px);
}

.stats-panel {
  background-color: rgba(0, 0, 0, 0.5);
  border-radius: 8px;
  padding: 15px;
  margin: 10px 0;
}

.merge-animation {
  animation: merge 0.5s ease-in-out;
}

@keyframes merge {
  0% { transform: scale(1); }
  50% { transform: scale(1.2); }
  100% { transform: scale(1); }
}

/* Player attack animation */
.player-attack-animation {
  animation: player-attack 0.5s ease-in-out;
}

@keyframes player-attack {
  0% { transform: translateX(0); }
  25% { transform: translateX(10px); }
  50% { transform: translateX(50px); }
  75% { transform: translateX(10px); }
  100% { transform: translateX(0); }
}

/* Enemy attack animation */
.enemy-attack-animation {
  animation: enemy-attack 0.5s ease-in-out;
}

@keyframes enemy-attack {
  0% { transform: translateX(0); }
  25% { transform: translateX(-10px); }
  50% { transform: translateX(-50px); }
  75% { transform: translateX(-10px); }
  100% { transform: translateX(0); }
}

.damage-text {
  position: absolute;
  color: #ef4444;
  font-weight: bold;
  font-size: 24px;
  animation: float-up 1s ease-out forwards;
  z-index: 10;
}

@keyframes float-up {
  0% { transform: translateY(0); opacity: 1; }
  100% { transform: translateY(-50px); opacity: 0; }
}

/* Hide the drag preview element from view but keep it in the DOM for drag operations */
.monster-drag-preview {
  position: fixed;
  pointer-events: none;
  z-index: 1000;
  left: 0;
  top: 0;
  opacity: 0.8;
}

/* Animation for swapping monsters */
.monster-swap {
  animation: swap 0.5s ease-in-out;
}

@keyframes swap {
  0% { transform: scale(1) rotate(0); }
  50% { transform: scale(0.8) rotate(10deg); }
  100% { transform: scale(1) rotate(0); }
}

/* Battle particles */
.battle-particle {
  position: absolute;
  width: 5px;
  height: 5px;
  border-radius: 50%;
  background-color: #ff4444;
  z-index: 5;
  animation: particle-explosion 1s ease-out forwards;
}

@keyframes particle-explosion {
  0% {
    transform: translate(0, 0);
    opacity: 1;
  }
  100% {
    transform: translate(
      calc(cos(var(--angle)) * var(--speed) * 50px),
      calc(sin(var(--angle)) * var(--speed) * 50px)
    );
    opacity: 0;
  }
}

/* Camera shake effect */
.camera-shake {
  animation: camera-shake 0.5s ease-in-out;
}

@keyframes camera-shake {
  0% { transform: translate(0, 0) rotate(0); }
  10% { transform: translate(-2px, -2px) rotate(-1deg); }
  20% { transform: translate(2px, 2px) rotate(1deg); }
  30% { transform: translate(-2px, 2px) rotate(0); }
  40% { transform: translate(2px, -2px) rotate(1deg); }
  50% { transform: translate(-2px, -2px) rotate(-1deg); }
  60% { transform: translate(2px, 2px) rotate(0); }
  70% { transform: translate(-2px, 2px) rotate(-1deg); }
  80% { transform: translate(2px, -2px) rotate(1deg); }
  90% { transform: translate(-2px, -2px) rotate(0); }
  100% { transform: translate(0, 0) rotate(0); }
}

/* Merge particles */
.merge-particle {
  position: absolute;
  width: 6px;
  height: 6px;
  border-radius: 50%;
  z-index: 20;
  animation: merge-particle-explosion 1s ease-out forwards;
  pointer-events: none;
}

@keyframes merge-particle-explosion {
  0% {
    transform: translate(0, 0) scale(1);
    opacity: 1;
  }
  100% {
    transform: translate(
      calc(cos(var(--angle)) * var(--speed) * 80px),
      calc(sin(var(--angle)) * var(--speed) * 80px)
    ) scale(0.5);
    opacity: 0;
  }
}

/* Merge flash effect */
.merge-flash {
  position: absolute;
  width: 100px;
  height: 100px;
  background: radial-gradient(circle, rgba(255,255,255,0.9) 0%, rgba(255,255,255,0) 70%);
  border-radius: 50%;
  transform: translate(-50%, -50%);
  z-index: 15;
  animation: merge-flash 0.6s ease-out forwards;
  pointer-events: none;
}

@keyframes merge-flash {
  0% { transform: translate(-50%, -50%) scale(0); opacity: 0.9; }
  50% { transform: translate(-50%, -50%) scale(1.5); opacity: 0.7; }
  100% { transform: translate(-50%, -50%) scale(2); opacity: 0; }
}

/* Merge pulse animation */
@keyframes merge-pulse {
  0% { transform: scale(1); filter: brightness(1); }
  25% { transform: scale(1.1); filter: brightness(1.3); }
  50% { transform: scale(0.9); filter: brightness(1.5); }
  75% { transform: scale(1.2); filter: brightness(1.3); }
  100% { transform: scale(1); filter: brightness(1); }
}

/* Team roster styling */
.roster-container {
  scrollbar-width: thin;
  scrollbar-color: rgba(255, 255, 255, 0.2) transparent;
}

.roster-container::-webkit-scrollbar {
  width: 6px;
}

.roster-container::-webkit-scrollbar-track {
  background: transparent;
}

.roster-container::-webkit-scrollbar-thumb {
  background-color: rgba(255, 255, 255, 0.2);
  border-radius: 20px;
}

/* Music player styling */
.music-player-button {
  transition: all 0.3s ease;
}

.music-player-button:hover {
  transform: scale(1.1);
  box-shadow: 0 0 15px rgba(109, 40, 217, 0.7);
}

.music-player-button:active {
  transform: scale(0.95);
}

.volume-slider {
  -webkit-appearance: none;
  appearance: none;
  width: 100%;
  height: 4px;
  background: rgba(255, 255, 255, 0.2);
  border-radius: 2px;
  outline: none;
}

.volume-slider::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  width: 12px;
  height: 12px;
  background: white;
  border-radius: 50%;
  cursor: pointer;
}

.volume-slider::-moz-range-thumb {
  width: 12px;
  height: 12px;
  background: white;
  border-radius: 50%;
  cursor: pointer;
  border: none;
}

/* Highlight grid cells during drag */
.grid-cell.drag-over {
  background-color: rgba(109, 40, 217, 0.3);
  box-shadow: 0 0 10px rgba(109, 40, 217, 0.5);
}

/* Visual indicator for grid boundaries */
.monster-grid {
  box-shadow: 0 0 0 2px rgba(109, 40, 217, 0.5);
  transition: box-shadow 0.3s ease;
}

.monster-grid.dragging {
  box-shadow: 0 0 0 3px rgba(109, 40, 217, 0.8), 0 0 20px rgba(109, 40, 217, 0.4);
}

/* Invalid drop animation */
.invalid-drop-animation {
  animation: invalid-drop 0.5s ease-in-out;
}

@keyframes invalid-drop {
  0% { transform: translateX(0); background-color: rgba(255, 255, 255, 0.1); }
  25% { transform: translateX(-5px); background-color: rgba(239, 68, 68, 0.3); }
  50% { transform: translateX(5px); background-color: rgba(239, 68, 68, 0.3); }
  75% { transform: translateX(-5px); background-color: rgba(239, 68, 68, 0.3); }
  100% { transform: translateX(0); background-color: rgba(255, 255, 255, 0.1); }
}
